#!/bin/bash

C_H1="\033[1;36m"
C_ERR="\033[1;31m"
C_CLEAR="\033[1;0m"

printhl() {
	printf "${C_H1}[I] ${1}${C_CLEAR} \n"
}

printerr() {
	printf "${C_ERR}[E] ${1}${C_CLEAR} \n"
}

make_v() {
	if [ ${V-0} -eq 0 ]; then
		make $@ > /dev/null 2> /dev/null
	else
		make $@
	fi
	if [ $? -ne 0 ]; then
		printerr "Error: please rerun V=1 $0 $*"
		exit 1
	fi	
}

INITRAMFS_DIR=${INITRAMFS_DIR-$1}
[ -z ${INITRAMFS_DIR} ] && echo "Please specify the INITRAMFS_DIR" && exit 1
[ ! -e ${INITRAMFS_DIR} ] && echo "Directory ${INITRAMFS_DIR} does not exist!" \
	&& exit 1
[ -z ${CROSS_COMPILE} ] && echo "Please set your CROSS_COMPILE environment" && \
	exit 1

TMP_INITRAMFS_DIR=`mktemp -d -t initramfs.dir.XXXXXX`
TMP_INITRAMFS_CPIO=`mktemp -t initramfs.cpio.XXXXXX`

export ARCH=arm
export USE_SEC_FIPS_MODE=true

printhl "Setting default .config"
make_v u1_defconfig

printhl "Compiling... (this step can take a long time)"
make_v modules_prepare modules

printhl "Generating initramfs into ${TMP_INITRAMFS_CPIO}"
rsync -avHS ${INITRAMFS_DIR}/ ${TMP_INITRAMFS_DIR}/ > /dev/null
rm -rf ${TMP_INITRAMFS_DIR}/lib/modules/*
find -name '*.ko' -exec cp -av {} ${TMP_INITRAMFS_DIR}/lib/modules/ \; \
	> /dev/null

cd ${TMP_INITRAMFS_DIR}
find | fakeroot cpio -H newc -o > ${TMP_INITRAMFS_CPIO} 2>/dev/null
cd - > /dev/null

printhl "Integrating the generated initramfs into the zImage"
make_v CONFIG_INITRAMFS_SOURCE=${TMP_INITRAMFS_CPIO}

printhl "arch/arm/boot/zImage is ready!"

rm -f ${TMP_INITRAMFS_CPIO}
rm -rf ${TMP_INITRAMFS_DIR}
